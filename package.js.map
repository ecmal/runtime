{
  "version": 3,
  "file": "package.js",
  "sources": [
    "./Loader.ts",
    "./Module.ts",
    "./Path.ts",
    "./System.ts"
  ],
  "names": [
    "Ecmal",
    "Ecmal.Loader",
    "Ecmal.Loader.constructor",
    "Ecmal.Loader.base",
    "Ecmal.Loader.get",
    "Ecmal.Loader.register",
    "Ecmal.Loader.import",
    "Ecmal.Loader.fetch",
    "Ecmal.Loader.define",
    "Ecmal.ServerSideLoader",
    "Ecmal.ServerSideLoader.constructor",
    "Ecmal.ServerSideLoader.FS",
    "Ecmal.ServerSideLoader.VM",
    "Ecmal.ServerSideLoader.runtime",
    "Ecmal.ServerSideLoader.main",
    "Ecmal.ServerSideLoader.get",
    "Ecmal.ServerSideLoader.read",
    "Ecmal.ServerSideLoader.eval",
    "Ecmal.ClientSideLoader",
    "Ecmal.ClientSideLoader.constructor",
    "Ecmal.ClientSideLoader.script",
    "Ecmal.ClientSideLoader.runtime",
    "Ecmal.ClientSideLoader.main",
    "Ecmal.ClientSideLoader.read",
    "Ecmal.ClientSideLoader.eval",
    "Ecmal.Environment",
    "Ecmal.platform",
    "Ecmal.Path",
    "Ecmal.Path.constructor",
    "Ecmal.Path.filename",
    "Ecmal.Path.dirname",
    "Ecmal.Path.normalize",
    "Ecmal.Path.resolve",
    "Ecmal.Runtime",
    "Ecmal.Runtime.constructor",
    "Ecmal.Runtime.environment",
    "Ecmal.System",
    "Ecmal.System.constructor",
    "Ecmal.System.config",
    "Ecmal.System.register",
    "Ecmal.System.import",
    "Ecmal.run"
  ],
  "mappings": "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AGA,GAAGA,UAAIA,CAACA,OAAOA,CAACA,MAAMA,CAACA,GAAGA,CAACA,CAACA;oBACnCA,IAAIA,YAAYA,GAAqBA,MAAMA,CAACA,YAAYA,CAACA,GAAGA,CAACA,UAACA,CAACA;wBAC3DA,IAAIA,IAAIA,GAAGA,CAACA,GAACA,KAAKA,CAACA;wBACnBA,EAAEA,CAAAA,CAACA,IAAIA,CAACA,CAACA,CAACA,IAAEA,GAAGA,CAACA,CAAAA,CAACA;4BACbA,IAAIA,GAAGA,UAAIA,CAACA,OAAOA,CAACA,GAAGA,EAACA,IAAIA,CAACA,CAAAA;wBACjCA,CAACA;wBAAAA,IAAIA,CAAAA,CAACA;4BACFA,IAAIA,GAAGA,UAAIA,CAACA,OAAOA,CAACA,KAAIA,CAACA,IAAIA,EAACA,IAAIA,CAACA,CAACA;wBACxCA,CAACA;wBACDA,MAAMA,CAACA,KAAIA,CAACA,KAAKA,CAACA,KAAIA,CAACA,GAAGA,CAACA,IAAIA,CAACA,CAACA,CAACA;oBACtCA,CAACA,CAACA,CAACA;oBACHA,MAAMA,CAACA,OAAOA,CAACA,GAAGA,CAACA,YAAYA,CAACA,CAACA,IAAIA,CAACA,UAACA,OAAgBA;wBACnDA,GAAGA,CAAAA,CAACA,GAAGA,CAACA,CAACA,GAACA,CAACA,EAACA,CAACA,GAACA,OAAOA,CAACA,MAAMA,EAACA,CAACA,EAAEA,EAACA,CAACA;4BAC9BA,MAAMA,CAACA,YAAYA,CAACA,CAACA,CAACA,GAAGA,OAAOA,CAACA,CAACA,CAACA,CAACA;4BACpCA,OAAOA,CAACA,CAACA,CAACA,CAACA,MAAMA,GAAGA,MAAMA,CAACA;wBAC/BA,CAACA;wBACDA,MAAMA,CAACA,MAAMA,CAACA;oBAClBA,CAACA,CAACA,CAACA;gBACPA,CAACA,CAACA,CAACA;YACXA,CAACA;YACDA,MAAMA,CAACA,OAAOA,CAACA;QACnBA,CAACA;QACDN,uBAAMA,GAANA,UAAOA,MAAaA;YAApBO,iBAuBCA;YAtBGA,EAAEA,CAAAA,CAACA,MAAMA,CAACA,OAAOA,CAACA,CAAAA,C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",
  "sourcesContent": [
    "namespace Ecmal {\n    declare function require(path:string):any;\n    export abstract class Loader {\n        public main:string;\n        public runtime:string;\n        public current:Module;\n        public modules:Modules;\n        public options:any;\n\n        constructor(){\n            this.options = {};\n            this.modules = {};\n        }\n        get base():string{\n            if(!this.options.base){\n                this.options.base = Path.resolve(Path.dirname(this.runtime),'../');\n            }\n            return this.options.base;\n        }\n        set base(v:string){\n            this.options.base=v;\n        }\n        abstract eval(url):Promise<string>;\n        abstract read(url):Promise<string>;\n\n        get(url){\n            var id = url.replace(this.base+'/','').replace(/^(.*)\\.js$/g,'$1').toLowerCase();\n            var module:Module =this.modules[id];\n            if(!module){\n                module = this.modules[id] = {id,url};\n            }\n            return module;\n        }\n        register(name:string,dependencies:string[],executable:any){\n            this.current.dependencies = dependencies;\n            this.current.executable = executable;\n        }\n        import(name){\n            var url = Path.resolve(this.base,name+'.js');\n            var dir = Path.dirname(url);\n            var mod = this.get(url);\n            if(mod.exports){\n                return Promise.resolve(mod.exports)\n            }else{\n                return this.fetch(mod).then((m:Module)=>this.define(m)).then((m:Module)=>m.exports);\n            }\n        }\n        fetch(module:Module):Promise<Module> {\n            var promise = Promise.resolve(module);\n            if(typeof module.source=='undefined' && !module.defined){\n                module.source = '';\n                promise = this.read(module)\n                    .then(()=>this.eval(module))\n                    .then(()=>{\n                        var dir = Path.dirname(module.url);\n                        var dependencies:Promise<Module>[] = module.dependencies.map((d):Promise<Module>=>{\n                            var path = d+'.js';\n                            if(path[0]=='.'){\n                                path = Path.resolve(dir,path)\n                            }else{\n                                path = Path.resolve(this.base,path);\n                            }\n                            return this.fetch(this.get(path));\n                        });\n                        return Promise.all(dependencies).then((modules:Module[]):Module=>{\n                            for(var d=0;d<modules.length;d++){\n                                module.dependencies[d] = modules[d];\n                                modules[d].parent = module;\n                            }\n                            return module;\n                        });\n                    });\n            }\n            return promise;\n        }\n        define(module:Module){\n            if(module.defined){\n                return Promise.resolve(module);\n            }else{\n                module.defined = true;\n                module.exports = {};\n                var definer:any = new module.executable((name,val)=>{\n                    module.exports[name] = val;\n                });\n                if(module.dependencies.length){\n                    var promises:Promise<any>[] = module.dependencies.map((m):any=>this.define(m).then(m=>m.exports));\n                    return Promise.all(promises).then((exps:any)=>{\n                        for(var i=0;i<exps.length;i++){\n                            definer.setters[i](exps[i])\n                        }\n                        definer.execute();\n                        return module;\n                    })\n                }else{\n                    definer.execute();\n                    return Promise.resolve(module)\n                }\n            }\n        }\n    }\n    export class ServerSideLoader extends Loader {\n        constructor(){\n            super();\n        }\n        static get FS(){\n            return Object.defineProperty(this, 'FS', <PropertyDescriptor>{\n                value: require('fs')\n            }).FS\n        }\n        static get VM(){\n            return Object.defineProperty(this, 'VM', <PropertyDescriptor>{\n                value : require('vm')\n            }).VM\n        }\n        get runtime():string {\n            return __filename;\n        }\n        get main():string {\n            return process.argv[2];\n        }\n        get(name){\n            var mod = super.get(name);\n            if(mod.id.indexOf('node/')==0){\n                mod.defined = true;\n                mod.exports = require(mod.id.substring(5));\n                return mod;\n            }else{\n                return mod;\n            }\n        }\n        read(module:Module):Promise<Module> {\n            return new Promise((accept, reject)=> {\n                ServerSideLoader.FS.readFile(module.url, 'utf8', function (err, data) {\n                    if (err){\n                        reject(err)\n                    }else{\n                        module.source = data;\n                        accept(module)\n                    }\n                });\n            });\n        }\n        eval(module:Module):Promise<Module> {\n            this.current = module;\n            var context = {\n                System      : global['System'],\n                Buffer      : global['Buffer'],\n                require     : global['require'],\n                process     : global['process'],\n                console     : global['console'],\n                __filename  : module.url,\n                __dirname   : Path.dirname(module.url)\n            };\n            ServerSideLoader.VM.runInNewContext(module.source,context,{\n                filename : module.url\n            });\n            this.current = null;\n            return Promise.resolve(module);\n        }\n    }\n    export class ClientSideLoader extends Loader {\n        get script():any{\n            return document.querySelector('script[main]');\n        }\n        get runtime():string{\n            return this.script.src;\n        }\n        get main():string{\n            return this.script.getAttribute('main');\n        }\n        read(module:Module):Promise<Module>{\n            return new Promise((accept, reject)=> {\n                var oReq = new XMLHttpRequest();\n                oReq.addEventListener('load', (e:Event)=>{\n                    module.source = oReq.responseText;\n                    accept(module);\n                });\n                oReq.addEventListener(\"error\", e=>{\n                    reject(e)\n                });\n                oReq.open(\"get\", module.url, true);\n                oReq.send();\n            })\n        }\n        eval(module:Module):Promise<Module> {\n            this.current = module;\n            var aHead = document.querySelector('head');\n            var aScript = document.createElement('script');\n            aScript.type = 'text/javascript';\n            aScript.id = module.id;\n            aScript.text = module.source+'\\n//# sourceURL='+module.url;\n            aHead.appendChild(aScript);\n            this.current = null;\n            return Promise.resolve(module);\n        }\n    }\n}",
    "namespace Ecmal {\n    export enum Environment {\n        SERVER,\n        CLIENT\n    }\n    export function platform(...support){\n        return target=>{\n            target.support = support;\n        }\n    }\n    export interface Module {\n        id?:string;\n        url?:string;\n        parent?:string|Module;\n        dependencies?:(string|Module)[]\n        source?:string\n        executable?:ObjectConstructor;\n        defined?:Boolean;\n        exports?:any;\n    }\n    export interface Modules {\n        [key:string]:Module\n    }\n}\n",
    "namespace Ecmal {\n    export class Path {\n        static SEP = '/';\n        static filename(path:String) {\n            return path.split(Path.SEP).pop();\n        }\n        static dirname(path) {\n            path = path.split('/');\n            path.pop();\n            path = path.join('/');\n            return path;\n        }\n        static normalize(path) {\n            if (!path || path === '/') {\n                return '/';\n            }\n            var prepend = (path[0] == '/' || path[0] == '.');\n            var target = [], src, scheme, parts, token;\n            if (path.indexOf('://') > 0) {\n                parts = path.split('://');\n                scheme = parts[0];\n                src = parts[1].split('/');\n            } else {\n                src = path.split('/');\n            }\n            for (var i = 0; i < src.length; ++i) {\n                token = src[i];\n                if (token === '..') {\n                    target.pop();\n                } else if (token !== '' && token !== '.') {\n                    target.push(token);\n                }\n            }\n            return (\n                (scheme ? scheme + '://' : '') +\n                (prepend ? '/' : '') +\n                target.join('/').replace(/[\\/]{2,}/g, '/')\n            );\n        }\n        static resolve(...paths) {\n            var current = paths.shift();\n            for(let path,p =0;p<paths.length;p++){\n                path=paths[p];\n                if (path[0] == '/') {\n                    current = path;\n                } else {\n                    current = Path.normalize(current + '/' + path)\n                }\n            }\n            return current;\n        }\n    }\n}\n",
    "namespace Ecmal {\n    export class Runtime {\n        static get environment(){\n            if(typeof window!='undefined'){\n                return Environment.CLIENT;\n            } else\n            if(typeof process=='object'){\n                return Environment.SERVER;\n            }\n        }\n    }\n    export class System {\n        loader:Loader;\n        constructor(){\n            switch(Runtime.environment){\n                case Environment.SERVER:\n                    this.loader = new ServerSideLoader();\n                break;\n                case Environment.CLIENT:\n                    this.loader = new ClientSideLoader();\n                break;\n            }\n        }\n        config(options:any){\n            if(options.base){\n                this.loader.base = options.base;\n            }\n        }\n        register(name,deps,exec){\n            if(Array.isArray(name)){\n                this.loader.register('@',name,deps);\n            }else{\n                this.loader.register(name,deps,exec);\n            }\n        }\n        import(name){\n            return this.loader.import(name)\n        }\n    }\n    export function run():System {\n        var system = new Ecmal.System();\n        /*if(system.loader.main){\n            system.import(system.loader.main).then(Main=>{\n                return \"OK\";\n            }).catch(e=>console.log(e.stack));\n        }*/\n        if(typeof global!='undefined'){\n            Object.defineProperty(global,'System',{\n                value : system\n            });\n            Object.defineProperty(global,'require',{\n                value : require\n            })\n        }\n        return system;\n    }\n}\n\nconst System = Ecmal.run();\n\n"
  ]
}