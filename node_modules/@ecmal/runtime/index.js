var System;
(function (System) {
    System.root = '~';
    System.url = '~';
    System.modules = Object.create(null);
    /** @internal */
    function register(path, requires, definer) {
        return doRegister(path, requires, definer);
    }
    System.register = register;
    Object.defineProperty(System, 'import', {
        configurable: true,
        value: function (name) {
            return doImport(name);
        }
    });
    var imports = Object.create(null);
    var platform;
    var globals;
    // private api 
    function doRegister() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var id = arguments[0];
        var requires = arguments[1];
        var definer = arguments[2];
        var exports = Object.create(null);
        if (Array.isArray(id)) {
            requires = arguments[0];
            definer = arguments[1];
        }
        var module = { id: id, requires: requires, exports: exports };
        module.definer = definer(function (name, value) {
            if (typeof name == 'string') {
                Object.defineProperty(exports, name, {
                    enumerable: true, value: value
                });
            }
            else if (typeof name == 'object') {
                for (var i in name) {
                    Object.defineProperty(exports, i, {
                        enumerable: true, value: name[i]
                    });
                }
            }
        }, module);
        System.modules[id] = module;
    }
    function doImport(name) {
        return new Promise(function (accept, reject) {
            imports[name] = { accept: accept, reject: reject };
        });
    }
    function doExecute(id) {
        var module = System.modules[id];
        if (module.definer) {
            var definer_1 = module.definer;
            var requires = module.requires;
            delete module.definer;
            requires.forEach(function (r, i) {
                definer_1.setters[i](doExecute(r));
            });
            definer_1.execute();
        }
        return module.exports;
    }
    function doDetectPlatform() {
        if (typeof global != 'undefined' && typeof process != 'undefined') {
            globals = global;
            globals.System = System;
            globals.require = require;
            globals.process = process;
            globals.__filename = __filename;
            globals.__dirname = __dirname;
            return "app";
        }
        else if (typeof window != 'undefined') {
            globals = window;
            return "web";
        }
    }
    function doInitialize() {
        Object.keys(System.modules).forEach(function (id) { return doExecute(id); });
        var ModuleClass = System.modules['@ecmal/runtime/module'].exports.Module;
        var SystemClass = System.modules['@ecmal/runtime/system'].exports.System;
        Object.keys(System.modules).forEach(function (id) {
            Object.setPrototypeOf(System.modules[id], ModuleClass.prototype);
        });
        Object.setPrototypeOf(System, SystemClass.prototype);
        SystemClass.call(System, platform, globals, imports);
    }
    function doBootstrap() {
        platform = doDetectPlatform();
        Object.defineProperties(globals, {
            System: { value: System },
            __extends: {
                value: function (d, b) {
                    if (b) {
                        Object.setPrototypeOf(d, b);
                        Object.setPrototypeOf(d.prototype, b.prototype);
                    }
                    Object.defineProperty(d.prototype, 'constructor', {
                        configurable: true,
                        value: d
                    });
                }
            },
            __awaiter: {
                value: function (thisArg, _arguments, P, generator) {
                    return new Promise(function (resolve, reject) {
                        function fulfilled(value) {
                            try {
                                step(generator.next(value));
                            }
                            catch (e) {
                                reject(e);
                            }
                        }
                        function rejected(value) {
                            try {
                                step(generator["throw"](value));
                            }
                            catch (e) {
                                reject(e);
                            }
                        }
                        function step(result) {
                            result.done ? resolve(result.value) : new Promise(function (resolve) {
                                resolve(result.value);
                            }).then(fulfilled, rejected);
                        }
                        step((generator = generator.apply(thisArg, _arguments || [])).next());
                    });
                }
            },
            __generator: {
                value: function (thisArg, body) {
                    var _ = { label: 0, sent: function () { if (t[0] & 1)
                            throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t;
                    return { next: verb(0), "throw": verb(1), "return": verb(2) };
                    function verb(n) { return function (v) { return step([n, v]); }; }
                    function step(op) {
                        if (f)
                            throw new TypeError("Generator is already executing.");
                        while (_)
                            try {
                                if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done)
                                    return t;
                                if (y = 0, t)
                                    op = [0, t.value];
                                switch (op[0]) {
                                    case 0:
                                    case 1:
                                        t = op;
                                        break;
                                    case 4:
                                        _.label++;
                                        return { value: op[1], done: false };
                                    case 5:
                                        _.label++;
                                        y = op[1];
                                        op = [0];
                                        continue;
                                    case 7:
                                        op = _.ops.pop();
                                        _.trys.pop();
                                        continue;
                                    default:
                                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                            _ = 0;
                                            continue;
                                        }
                                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                            _.label = op[1];
                                            break;
                                        }
                                        if (op[0] === 6 && _.label < t[1]) {
                                            _.label = t[1];
                                            t = op;
                                            break;
                                        }
                                        if (t && _.label < t[2]) {
                                            _.label = t[2];
                                            _.ops.push(op);
                                            break;
                                        }
                                        if (t[2])
                                            _.ops.pop();
                                        _.trys.pop();
                                        continue;
                                }
                                op = body.call(thisArg, _);
                            }
                            catch (e) {
                                op = [6, e];
                                y = 0;
                            }
                            finally {
                                f = t = 0;
                            }
                        if (op[0] & 5)
                            throw op[1];
                        return { value: op[0] ? op[1] : void 0, done: true };
                    }
                }
            },
            __decorate: {
                value: function (decorators, target, key, desc) {
                    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                    if (typeof Reflect === "object" && typeof Reflect['decorate'] === "function")
                        r = Reflect['decorate'](decorators, target, key, desc);
                    else
                        for (var i = decorators.length - 1; i >= 0; i--)
                            if (d = decorators[i])
                                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                    return c > 3 && r && Object.defineProperty(target, key, r), r;
                }
            },
            __metadata: {
                value: function (k, v) {
                    if (typeof Reflect === "object" && typeof Reflect['metadata'] === "function")
                        return Reflect['metadata'](k, v);
                }
            },
        });
        doRegister('tslib', [], function (exports, context) {
            context.exports = globals;
        });
        setTimeout(doInitialize, 0);
    }
    doBootstrap();
})(System || (System = {}));
System.register("@ecmal/runtime/decorators/bound", [], function (exports_1, context_1) {
    "use strict";
    var __moduleName = context_1 && context_1.id;
    function Bound(target, key, desc) {
        return desc;
    }
    exports_1("Bound", Bound);
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("@ecmal/runtime/decorators/cached", [], function (exports_2, context_2) {
    "use strict";
    var __moduleName = context_2 && context_2.id;
    function Cached(target, key) {
    }
    exports_2("Cached", Cached);
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("@ecmal/runtime/decorators/properties", [], function (exports_3, context_3) {
    "use strict";
    var __moduleName = context_3 && context_3.id;
    var Constant, Final, Hidden;
    return {
        setters: [],
        execute: function () {
            exports_3("Constant", Constant = function (target, key, desc) {
                desc = Object.getOwnPropertyDescriptor(target, key);
                desc.writable = false;
                Object.defineProperty(target, key, desc);
                return desc;
            });
            exports_3("Final", Final = function (target, key, desc) {
                desc = Object.getOwnPropertyDescriptor(target, key);
                desc.configurable = false;
                Object.defineProperty(target, key, desc);
                return desc;
            });
            exports_3("Hidden", Hidden = function (target, key, desc) {
                try {
                    desc = desc || Object.getOwnPropertyDescriptor(target, key) || { configurable: true, writable: true };
                    desc.enumerable = false;
                    console.info(key, desc);
                    Object.defineProperty(target, key, desc);
                    return desc;
                }
                catch (ex) {
                    console.info(ex);
                }
            });
        }
    };
});
/// <reference path="package.ts" />
System.register("@ecmal/runtime/decorators", ["@ecmal/runtime/decorators/bound", "@ecmal/runtime/decorators/cached", "@ecmal/runtime/decorators/properties"], function (exports_4, context_4) {
    "use strict";
    var __moduleName = context_4 && context_4.id;
    function exportStar_1(m) {
        var exports = {};
        for (var n in m) {
            if (n !== "default") exports[n] = m[n];
        }
        exports_4(exports);
    }
    return {
        setters: [
            function (bound_1_1) {
                exportStar_1(bound_1_1);
            },
            function (cached_1_1) {
                exportStar_1(cached_1_1);
            },
            function (properties_1_1) {
                exportStar_1(properties_1_1);
            }
        ],
        execute: function () {/// <reference path="package.ts" />
        }
    };
});
///<reference path="./package.ts"/>
System.register("@ecmal/runtime/events", [], function (exports_5, context_5) {
    "use strict";
    var __moduleName = context_5 && context_5.id;
    var EVENTS, LISTENER, Emitter;
    return {
        setters: [],
        execute: function () {///<reference path="./package.ts"/>
            EVENTS = Symbol('events');
            LISTENER = Symbol('listener');
            Emitter = (function () {
                function Emitter() {
                }
                Emitter.prototype.on = function (event, handler, options) {
                    if (options === void 0) { options = {}; }
                    var events = this[EVENTS];
                    if (!events) {
                        events = this[EVENTS] = Object.create(null);
                    }
                    var listeners = events[event];
                    if (!listeners) {
                        events[event] = [handler];
                    }
                    else {
                        listeners.push(handler);
                    }
                    handler[LISTENER] = options;
                };
                Emitter.prototype.once = function (event, handler, options) {
                    if (options === void 0) { options = {}; }
                    options.once = true;
                    this.on(event, handler, options);
                };
                Emitter.prototype.off = function (event, handler) {
                    var events = this[EVENTS];
                    if (events) {
                        if (!handler) {
                            delete events[event];
                            return;
                        }
                        var listeners = events[event];
                        if (listeners) {
                            events[event] = listeners = listeners.filter(function (l) {
                                if (handler == l) {
                                    delete handler[LISTENER];
                                    return false;
                                }
                                else {
                                    return true;
                                }
                            });
                            if (listeners.length == 0) {
                                delete events[event];
                            }
                        }
                    }
                    else {
                        delete this[EVENTS];
                    }
                };
                Emitter.prototype.emit = function (event) {
                    var _this = this;
                    var args = [];
                    for (var _i = 1; _i < arguments.length; _i++) {
                        args[_i - 1] = arguments[_i];
                    }
                    var events = this[EVENTS];
                    if (events) {
                        var listeners = events[event];
                        if (listeners) {
                            return listeners.map(function (l) {
                                var options = l[LISTENER];
                                if (options) {
                                    if (options.once) {
                                        _this.off(event, l);
                                    }
                                    return l.apply(options.target, args);
                                }
                                else {
                                    return l.apply(void 0, args);
                                }
                            });
                        }
                    }
                };
                return Emitter;
            }());
            exports_5("Emitter", Emitter);
        }
    };
});
///<reference path="./package.ts"/>
System.register("@ecmal/runtime/helpers", [], function (exports_6, context_6) {
    "use strict";
    var __moduleName = context_6 && context_6.id;
    var Path;
    return {
        setters: [],
        execute: function () {///<reference path="./package.ts"/>
            Path = (function () {
                function Path() {
                }
                Object.defineProperty(Path, "SEP", {
                    get: function () { return '/'; },
                    enumerable: true,
                    configurable: true
                });
                Path.filename = function (path) {
                    return path.split(Path.SEP).pop();
                };
                Path.dirname = function (path) {
                    path = path.split('/');
                    path.pop();
                    path = path.join('/');
                    return path;
                };
                Path.normalize = function (path) {
                    if (!path || path === '/') {
                        return '/';
                    }
                    var prepend = (path[0] == '/' || path[0] == '.');
                    var target = [], src, scheme, parts, token;
                    if (path.indexOf('://') > 0) {
                        parts = path.split('://');
                        scheme = parts[0];
                        src = parts[1].split('/');
                    }
                    else {
                        src = path.split('/');
                    }
                    for (var i = 0; i < src.length; ++i) {
                        token = src[i];
                        if (token === '..') {
                            target.pop();
                        }
                        else if (token !== '' && token !== '.') {
                            target.push(token);
                        }
                    }
                    return ((scheme ? scheme + '://' : '') +
                        (prepend ? '/' : '') +
                        target.join('/').replace(/[\/]{2,}/g, '/'));
                };
                Path.resolve = function () {
                    var paths = [];
                    for (var _i = 0; _i < arguments.length; _i++) {
                        paths[_i] = arguments[_i];
                    }
                    var current = paths.shift();
                    for (var path = void 0, p = 0; p < paths.length; p++) {
                        path = paths[p];
                        if (path[0] == '/') {
                            current = path;
                        }
                        else {
                            current = Path.normalize(current + '/' + path);
                        }
                    }
                    return current;
                };
                Path.moduleUrl = function (base, id) {
                    return this.resolve(base, id + '.js');
                };
                Path.moduleId = function (base, url) {
                    return url.replace(base + '/', '')
                        .replace(/^(.*)\.js$/g, '$1');
                };
                return Path;
            }());
            exports_6("Path", Path);
        }
    };
});
System.register("@ecmal/runtime/module", ["tslib", "@ecmal/runtime/events"], function (exports_7, context_7) {
    "use strict";
    var __moduleName = context_7 && context_7.id;
    var tslib_1, events_1, Module;
    return {
        setters: [
            function (tslib_1_1) {
                tslib_1 = tslib_1_1;
            },
            function (events_1_1) {
                events_1 = events_1_1;
            }
        ],
        execute: function () {
            Module = (function (_super) {
                tslib_1.__extends(Module, _super);
                /**
                 * @internal
                 */
                function Module(name, requires, definer) {
                    var _this = _super.call(this) || this;
                    _this.id = name;
                    _this.requires = requires;
                    _this.members = Object.create(null);
                    _this.exports = Object.create(null);
                    _this.definer = definer(function (name, value) {
                        if (typeof name == 'string') {
                            Object.defineProperty(_this.exports, name, {
                                enumerable: true, value: value
                            });
                        }
                        else if (typeof name == 'object') {
                            for (var i in name) {
                                Object.defineProperty(_this.exports, i, {
                                    enumerable: true, value: name[i]
                                });
                            }
                        }
                    }, _this);
                    return _this;
                }
                /**
                 * @internal
                 */
                Module.add = function (name, requires, definer) {
                    var m = new Module(name, requires, definer);
                    Object.defineProperty(System.modules, name, {
                        writable: false,
                        enumerable: true,
                        configurable: false,
                        value: m
                    });
                    return m;
                };
                /**
                 * @internal
                 */
                Module.get = function (name) {
                    return (System.modules[name] || System.modules[name + "/index"]);
                };
                /**
                 * @internal
                 */
                Module.prototype.execute = function () {
                    if (this.definer) {
                        var definer = this.definer;
                        delete this.definer;
                        if (this.requires && this.requires.length) {
                            this.requires.forEach(function (r, i) {
                                var m = Module.get(r);
                                if (m && m.execute) {
                                    definer.setters[i](m.execute());
                                }
                            });
                        }
                        try {
                            definer.execute();
                            this.emit('execute');
                        }
                        catch (ex) {
                            var error = new Error("module \"" + this.id + "\" execution error");
                            error.stack += "\ncause : \n" + ex.stack;
                            throw error;
                        }
                    }
                    return this.exports;
                };
                Module.prototype.toString = function () {
                    return "Module(" + this.id + ")";
                };
                Module.prototype.inspect = function () {
                    return this.toString();
                };
                Module.prototype.export = function (name, value) {
                    this.exports[name] = value;
                };
                return Module;
            }(events_1.Emitter));
            exports_7("Module", Module);
        }
    };
});
System.register("@ecmal/runtime/loaders/base", ["@ecmal/runtime/helpers", "@ecmal/runtime/module"], function (exports_8, context_8) {
    "use strict";
    var __moduleName = context_8 && context_8.id;
    var helpers_1, module_1, Loader;
    return {
        setters: [
            function (helpers_1_1) {
                helpers_1 = helpers_1_1;
            },
            function (module_1_1) {
                module_1 = module_1_1;
            }
        ],
        execute: function () {
            Loader = (function () {
                function Loader() {
                    if (System.root == '~') {
                        this.detectRoot();
                        Object.defineProperty(System, 'root', {
                            enumerable: true,
                            configurable: false,
                            writable: false,
                            value: helpers_1.Path.resolve(helpers_1.Path.dirname(System.url), '../..')
                        });
                    }
                    Object.defineProperty(this, 'projects', {
                        value: Object.create(null)
                    });
                    Object.defineProperty(this, 'registrations', {
                        value: Object.create(null)
                    });
                }
                Loader.prototype.import = function (name, parent) {
                    var m = module_1.Module.get(name);
                    if (m) {
                        return Promise.resolve(m);
                    }
                    else {
                        return this.doImport(name).then(function (m) { return m.exports; });
                    }
                };
                Loader.prototype.register = function (name, requires, definer) {
                    if (Array.isArray(name)) {
                        definer = requires;
                        requires = name;
                        name = this.current;
                    }
                    this.registrations[name] = { requires: requires, definer: definer };
                };
                /**
                 * @internal
                 */
                Loader.prototype.doImport = function (name) {
                    var _this = this;
                    return this.doLoadModule(name).then(function (r) { return _this.doDefineModules(); }).then(function (modules) {
                        module_1.Module.get(name).execute();
                        modules.forEach(function (m) { return m.execute(); });
                        return module_1.Module.get(name);
                    });
                };
                /**
                 * @internal
                 */
                Loader.prototype.doLoadProject = function (id) {
                    var _this = this;
                    if (!this.projects[id]) {
                        var url = helpers_1.Path.resolve(System.root, id + "/package.json");
                        return this.loadProject(id, url).then(function (project) {
                            project.id = id;
                            project.url = url;
                            _this.projects[id] = project;
                            return project;
                        });
                    }
                    else {
                        return Promise.resolve(this.projects[id]);
                    }
                };
                /**
                 * @internal
                 */
                Loader.prototype.doLoadModule = function (name) {
                    var _this = this;
                    var loadModule = function (id, bundle) {
                        _this.registrations[id] = true;
                        var url = helpers_1.Path.resolve(System.root, (bundle ? bundle : id) + ".js");
                        return _this.loadModule(id, url).then(function (m) {
                            try {
                                _this.registrations[id] = m;
                                _this.registrations[id].url = url;
                            }
                            catch (e) {
                                console.info(id, url, e.message);
                            }
                            return _this.doLoadDependencies();
                        }, function (e) {
                            var error = new Error("Loading module \"" + id + "\" failed \"" + url + "\"");
                            error.stack += "\nCause: " + e.stack;
                            throw error;
                        });
                    };
                    var _a = name.match(/^(@[a-zA-Z0-9\-_]+\/[a-zA-Z0-9\-_]+)(\/.*)?$/), fullName = _a[0], projectName = _a[1], moduleName = _a[2];
                    return this.doLoadProject(projectName).then(function (project) {
                        var bundle = project.bundle ? project.id + "/index" : void 0;
                        if (!moduleName) {
                            name = project.id + "/" + (project.main.replace(/^(.*)\.js$/, '$1') || 'index');
                        }
                        return loadModule(name, bundle);
                    });
                };
                /**
                 * @internal
                 */
                Loader.prototype.doLoadDependencies = function () {
                    var _this = this;
                    var requirements = [];
                    for (var id in this.registrations) {
                        var reg = this.registrations[id];
                        if (reg.requires && reg.requires.length) {
                            reg.requires = reg.requires.map(function (r) {
                                if (r[0] == '.') {
                                    return helpers_1.Path.resolve(helpers_1.Path.dirname(id), r);
                                }
                                else {
                                    return r;
                                }
                            });
                            reg.requires.forEach(function (r) {
                                if (!_this.registrations[r] && !module_1.Module.get(r)) {
                                    requirements.push(r);
                                }
                            });
                        }
                    }
                    return Promise.all(requirements.map(function (r) { return _this.doLoadModule(r); }));
                };
                /**
                 * @internal
                 */
                Loader.prototype.doDefineModules = function () {
                    var _this = this;
                    return Object.keys(this.registrations).map(function (name) {
                        var m = _this.registrations[name];
                        delete _this.registrations[name];
                        var sm = module_1.Module.add(name, m.requires, m.definer);
                        Object.defineProperty(sm, 'url', {
                            enumerable: true,
                            configurable: false,
                            writable: false,
                            value: m.url || System.url
                        });
                        return sm;
                    });
                };
                return Loader;
            }());
            exports_8("Loader", Loader);
        }
    };
});
System.register("@ecmal/runtime/loaders/app", ["tslib", "@ecmal/runtime/loaders/base"], function (exports_9, context_9) {
    "use strict";
    var __moduleName = context_9 && context_9.id;
    var tslib_2, base_1, AppLoader;
    return {
        setters: [
            function (tslib_2_1) {
                tslib_2 = tslib_2_1;
            },
            function (base_1_1) {
                base_1 = base_1_1;
            }
        ],
        execute: function () {
            AppLoader = (function (_super) {
                tslib_2.__extends(AppLoader, _super);
                function AppLoader() {
                    var _this = _super.call(this) || this;
                    var nodeModules = [];
                    Object.keys(System.modules).forEach(function (k) {
                        System.modules[k].requires.forEach(function (k) {
                            if (k.indexOf('node/') == 0 && nodeModules.indexOf(k) < 0) {
                                nodeModules.push(k);
                            }
                        });
                    });
                    if (nodeModules.length) {
                        nodeModules.forEach(function (k) {
                            _this.evalModule(k, System.url, _this.nodeModule(k));
                        });
                        _this.doDefineModules();
                    }
                    return _this;
                }
                Object.defineProperty(AppLoader, "fs", {
                    get: function () {
                        return Object.defineProperty(this, 'fs', {
                            value: require('fs')
                        }).fs;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(AppLoader, "vm", {
                    get: function () {
                        return Object.defineProperty(this, 'vm', {
                            value: require('vm')
                        }).vm;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(AppLoader.prototype, "runtime", {
                    get: function () {
                        return __filename;
                    },
                    enumerable: true,
                    configurable: true
                });
                AppLoader.prototype.detectRoot = function () {
                    Object.defineProperty(System, 'url', {
                        enumerable: true,
                        configurable: false,
                        writable: false,
                        value: this.runtime
                    });
                };
                AppLoader.prototype.loadModule = function (id, url) {
                    var _this = this;
                    return new Promise(function (accept, reject) {
                        if (id.indexOf('node/') == 0) {
                            _this.evalModule(id, url, _this.nodeModule(id));
                            accept(_this.registrations[id]);
                        }
                        else {
                            AppLoader.fs.readFile(url, 'utf8', function (err, data) {
                                try {
                                    _this.evalModule(id, url, data.toString());
                                    if (err) {
                                        reject(err);
                                    }
                                    else {
                                        accept(_this.registrations[id]);
                                    }
                                }
                                catch (ex) {
                                    reject(ex);
                                }
                            });
                        }
                    });
                };
                AppLoader.prototype.loadProject = function (id, url) {
                    return new Promise(function (accept, reject) {
                        AppLoader.fs.readFile(url, 'utf8', function (err, data) {
                            try {
                                if (err) {
                                    reject(err);
                                }
                                else {
                                    accept(JSON.parse(data.toString()));
                                }
                            }
                            catch (ex) {
                                reject(ex);
                            }
                        });
                    });
                };
                AppLoader.prototype.nodeModule = function (id) {
                    return "__module(\"" + id + "\",[],function(system,module) {\n            Object.defineProperty(module,'exports',{\n                configurable    : true,\n                writable        : false,\n                value           : require(\"" + id.substr(5) + "\")\n            })\n        })";
                };
                AppLoader.prototype.evalModule = function (id, url, data) {
                    this.current = id;
                    AppLoader.vm.runInThisContext(data, {
                        filename: url
                    });
                    this.current = null;
                };
                return AppLoader;
            }(base_1.Loader));
            exports_9("AppLoader", AppLoader);
        }
    };
});
System.register("@ecmal/runtime/loaders/web", ["tslib", "@ecmal/runtime/loaders/base"], function (exports_10, context_10) {
    "use strict";
    var __moduleName = context_10 && context_10.id;
    var tslib_3, base_2, WebLoader;
    return {
        setters: [
            function (tslib_3_1) {
                tslib_3 = tslib_3_1;
            },
            function (base_2_1) {
                base_2 = base_2_1;
            }
        ],
        execute: function () {
            WebLoader = (function (_super) {
                tslib_3.__extends(WebLoader, _super);
                function WebLoader() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                Object.defineProperty(WebLoader.prototype, "script", {
                    get: function () {
                        return Object.defineProperty(this, 'script', {
                            value: (function () {
                                var script = window.document.querySelector('script[main]');
                                if (!script) {
                                    var scripts = window.document.querySelectorAll('script');
                                    for (var i = 0; i < scripts.length; i++) {
                                        if (scripts[i].src.indexOf('@ecmal/runtime') > 0) {
                                            return scripts[i];
                                        }
                                    }
                                }
                                else {
                                    return script;
                                }
                            })()
                        }).script;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(WebLoader.prototype, "runtime", {
                    get: function () {
                        return this.script.src;
                    },
                    enumerable: true,
                    configurable: true
                });
                WebLoader.prototype.register = function (name, requires, definer) {
                    if (Array.isArray(name)) {
                        definer = requires;
                        requires = name;
                        name = document.currentScript.id;
                    }
                    _super.prototype.register.call(this, name, requires, definer);
                };
                WebLoader.prototype.detectRoot = function () {
                    Object.defineProperty(System, 'url', {
                        enumerable: true,
                        configurable: false,
                        writable: false,
                        value: this.runtime
                    });
                };
                WebLoader.prototype.loadModule = function (id, url) {
                    var _this = this;
                    return new Promise(function (accept, reject) {
                        var aHead = window.document.head;
                        var aScript = window.document.createElement('script');
                        aScript.type = 'text/javascript';
                        aScript.id = id;
                        aScript.src = url;
                        aScript.onload = function () {
                            accept(_this.registrations[id]);
                        };
                        aScript.onerror = reject;
                        aHead.appendChild(aScript);
                    });
                };
                WebLoader.prototype.loadProject = function (id, url) {
                    return this.loadJson(url);
                };
                WebLoader.prototype.loadJson = function (url) {
                    return this.loadText(url).then(function (r) { return JSON.parse(r); });
                };
                WebLoader.prototype.loadText = function (url) {
                    return new Promise(function (accept, reject) {
                        var request = new XMLHttpRequest();
                        request.onreadystatechange = function () {
                            if (request.readyState == 4) {
                                if (request.status == 200) {
                                    accept(request.responseText);
                                }
                                else {
                                    reject(new Error(request.status + " " + request.statusText));
                                }
                            }
                        };
                        request.open("GET", url, true);
                        request.send();
                    });
                };
                return WebLoader;
            }(base_2.Loader));
            exports_10("WebLoader", WebLoader);
        }
    };
});
System.register("@ecmal/runtime/loader", ["@ecmal/runtime/loaders/base", "@ecmal/runtime/loaders/app", "@ecmal/runtime/loaders/web"], function (exports_11, context_11) {
    "use strict";
    var __moduleName = context_11 && context_11.id;
    function exportStar_2(m) {
        var exports = {};
        for (var n in m) {
            if (n !== "default") exports[n] = m[n];
        }
        exports_11(exports);
    }
    return {
        setters: [
            function (base_3_1) {
                exportStar_2(base_3_1);
            },
            function (app_1_1) {
                exportStar_2(app_1_1);
            },
            function (web_1_1) {
                exportStar_2(web_1_1);
            }
        ],
        execute: function () {
        }
    };
});
System.register("@ecmal/runtime/system", ["tslib", "@ecmal/runtime/events", "@ecmal/runtime/loader"], function (exports_12, context_12) {
    "use strict";
    var __moduleName = context_12 && context_12.id;
    var tslib_4, events_2, loader_1, loader_2, System;
    return {
        setters: [
            function (tslib_4_1) {
                tslib_4 = tslib_4_1;
            },
            function (events_2_1) {
                events_2 = events_2_1;
            },
            function (loader_1_1) {
                loader_1 = loader_1_1;
                loader_2 = loader_1_1;
            }
        ],
        execute: function () {
            System = (function (_super) {
                tslib_4.__extends(System, _super);
                /**
                 * @internal
                 */
                function System(platform, globals, imports) {
                    var _this = _super.call(this) || this;
                    var modules = _this.modules;
                    delete _this.import;
                    delete _this.register;
                    delete _this.modules;
                    Object.defineProperty(_this, 'platform', {
                        value: platform
                    });
                    Object.defineProperty(_this, 'globals', {
                        value: globals
                    });
                    Object.defineProperty(_this, 'modules', {
                        value: modules
                    });
                    switch (_this.platform) {
                        case 'app':
                            Object.defineProperty(_this, 'loader', {
                                value: new loader_1.AppLoader()
                            });
                            break;
                        case 'web':
                            Object.defineProperty(_this, 'loader', {
                                value: new loader_2.WebLoader()
                            });
                            break;
                    }
                    Object.defineProperty(_this, 'module', {
                        enumerable: true,
                        writable: false,
                        configurable: false,
                        value: _this.modules[__moduleName]
                    });
                    for (var n in _this.modules) {
                        var m = _this.modules[n];
                        if (!m.url) {
                            Object.defineProperty(m, 'url', {
                                enumerable: true,
                                configurable: false,
                                writable: false,
                                value: _this.url
                            });
                        }
                    }
                    var start = Date.now();
                    var chain = Promise.resolve();
                    Object.keys(imports).forEach(function (id) {
                        var promise = imports[id];
                        if (_this.modules[id]) {
                            promise.accept(_this.modules[id].exports);
                        }
                        else {
                            chain = chain.then(function (r) { return _this.loader.import(id).then(function (m) { return promise.accept(m); }, function (e) { return promise.reject(e); }); });
                        }
                    });
                    return _this;
                    /*chain.then(r=>{
                        console.info(`System started in ${Date.now()-start}ms`);
                    })*/
                }
                System.prototype.import = function (name) {
                    return this.loader.import(name);
                };
                System.prototype.register = function (name, requires, definer) {
                    return this.loader.register(name, requires, definer);
                };
                return System;
            }(events_2.Emitter));
            exports_12("System", System);
            exports_12("default", System);
        }
    };
});
//# sourceMappingURL=index.js.map